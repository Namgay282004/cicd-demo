# Example .snyk configuration file for the cicd-demo project
# This file demonstrates how to configure Snyk for your project

version: v1.0.0

# Ignore specific vulnerabilities
# Use this section to ignore vulnerabilities that are false positives
# or have acceptable risk in your specific context
ignore:
  # Example: Ignore a specific vulnerability in a transitive dependency
  # 'SNYK-JAVA-ORGAPACHECOMMONS-1234567':
  #   - '*':
  #       reason: 'False positive - not exploitable in our Spring Boot context'
  #       expires: '2024-12-31T23:59:59.999Z'

  # Example: Ignore vulnerability in specific paths only
  # 'SNYK-JAVA-COMFASTERXMLJACKSONCORE-2807556':
  #   - 'src/test/**':
  #       reason: 'Test dependency - not present in production'
  #       expires: '2024-06-30T23:59:59.999Z'

# Patch configuration (currently empty for Maven projects)
# Patches are primarily used for npm projects
patches: {}

# Language-specific settings
language-settings:
  java:
    # Java-specific configuration options
    # These settings apply to all Java scans in this project

    # Exclude test dependencies from vulnerability scanning to improve performance
    include-dev-deps: false

    # Set Maven-specific options
    maven-aggregate-project: true
    
    # Performance optimization settings
    max-depth: 10  # Limit dependency tree depth for faster scanning

# Project-specific settings
# These settings apply to the entire project
exclude:
  # Exclude specific directories from scanning to improve performance
  - 'target/**'
  - '**/*.class'
  - 'logs/**'
  - '.git/**'
  - 'node_modules/**'  # In case of mixed projects

# Snyk Code specific settings (for SAST scanning)
code:
  # Exclude specific files or patterns from code analysis
  exclude:
    - 'src/test/**'           # Test files are not in production
    - '**/*.properties'       # Configuration files
    - '**/Test*.java'         # Test classes
    - '**/*Test.java'         # Test classes
    - '**/*Tests.java'        # Test classes
    - 'target/**'             # Build artifacts
    - '.github/**'            # GitHub workflows
    
  # Quality gates - fail build only on high severity issues
  quality-gate:
    critical: true    # Fail on critical issues
    high: true        # Fail on high severity issues  
    medium: false     # Don't fail on medium severity
    low: false        # Don't fail on low severity

# Performance and timeout settings
timeout: 900  # 15 minutes timeout for scans

# Organization and project tagging (for Snyk dashboard)
tags:
  - 'spring-boot'
  - 'java-17'
  - 'maven'
  - 'cicd-demo'
  - 'production'
